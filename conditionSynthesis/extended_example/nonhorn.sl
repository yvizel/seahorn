(synth-fun verifier.error ((x0 Bool) (x1 Bool) (x2 Bool) ) Bool)
(synth-fun main@entry ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun main@_10 ((x0 Int) (x1 Int) (x2 Int) (x3 Int) ) Bool)
(synth-fun main@_13 ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun main@_17 ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun main@.lr.ph ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun main@verifier.error.split () Bool)
(synth-fun main@entry!_BAD () Bool)
(synth-fun main@_10!_Cond ((x0 Int) (x1 Int) (x2 Int) (x3 Int) ) Bool)
(synth-fun main@_10!_FwdCond ((x0 Int) (x1 Int) (x2 Int) (x3 Int) ) Bool)
(declare-var main@%_22_0 Bool )
(declare-var main@%_23_0 Bool )
(declare-var main@%or.cond.i_0 Bool )
(declare-var main@%_24_0 Int )
(declare-var main@%_25_0 Bool )
(declare-var main@%or.cond3.i_0 Bool )
(declare-var main@%_21_0 Bool )
(declare-var main@%.1.i2_2 Int )
(declare-var main@%.01.i1_2 Int )
(declare-var main@%_8_0 Int )
(declare-var main@%_18_0 Bool )
(declare-var main@%_14_0 Int )
(declare-var main@%_11_0 Int )
(declare-var @find_condition_0 Int )
(declare-var main@%_12_0 Bool )
(declare-var main@%_0_0 Bool )
(declare-var main@%_1_0 Int )
(declare-var @nd_0 Int )
(declare-var main@%_3_0 Int )
(declare-var main@%_5_0 Int )
(declare-var main@%_7_0 Bool )
(declare-var @g_0 Int )
(declare-var main@entry_0 Bool )
(declare-var main@%loop.bound_0 Int )
(declare-var main@%_2_0 Int )
(declare-var main@_10_0 Bool )
(declare-var main@.thread_0 Bool )
(declare-var main@.lr.ph.preheader_0 Bool )
(declare-var main@%.1.i2.ph_0 Int )
(declare-var main@%.1.i2.ph_1 Int )
(declare-var main@.lr.ph_0 Bool )
(declare-var main@%.1.i2_0 Int )
(declare-var main@%.01.i1_0 Int )
(declare-var main@%.1.i2_1 Int )
(declare-var main@%.01.i1_1 Int )
(declare-var main@_13_0 Bool )
(declare-var main@_17_0 Bool )
(declare-var main@%.0.i_0 Int )
(declare-var main@%.0.i_1 Int )
(declare-var main@%_16_0 Int )
(declare-var main@verifier.error_0 Bool )
(declare-var main@%.01.i.lcssa_0 Int )
(declare-var main@%.1.i.lcssa_0 Int )
(declare-var main@%.01.i.lcssa_1 Int )
(declare-var main@%.1.i.lcssa_1 Int )
(declare-var main@verifier.error.split_0 Bool )
(declare-var main@%_19_0 Int )
(declare-var main@%_20_0 Int )
(declare-var main@.lr.ph_1 Bool )
(constraint (verifier.error false false false))
(constraint (verifier.error false true true))
(constraint (verifier.error true false true))
(constraint (verifier.error true true true))
(constraint (main@entry @g_0 @find_condition_0 @nd_0))
(constraint (=> (and (main@entry @g_0 @find_condition_0 @nd_0)
         true
         (= main@%_0_0 (= main@%loop.bound_0 5))
         main@%_0_0
         (= main@%_1_0 @nd_0)
         (= main@%_3_0 @nd_0)
         (= main@%_5_0 @nd_0)
         (= main@%_7_0 (> main@%_2_0 8))
         (=> main@_10_0 (and main@_10_0 main@entry_0))
         (=> (and main@_10_0 main@entry_0) (not main@%_7_0))
         main@_10_0)
    (main@_10 main@%loop.bound_0 main@%_2_0 @g_0 @find_condition_0)))
(constraint (=> (and (main@entry @g_0 @find_condition_0 @nd_0)
         true
         (= main@%_0_0 (= main@%loop.bound_0 5))
         main@%_0_0
         (= main@%_1_0 @nd_0)
         (= main@%_3_0 @nd_0)
         (= main@%_5_0 @nd_0)
         (= main@%_7_0 (> main@%_2_0 8))
         (=> main@.thread_0 (and main@.thread_0 main@entry_0))
         (=> (and main@.thread_0 main@entry_0) main@%_7_0)
         (=> main@.thread_0 (= main@%_8_0 @g_0))
         (=> main@.lr.ph.preheader_0
             (and main@.lr.ph.preheader_0 main@.thread_0))
         (=> (and main@.lr.ph.preheader_0 main@.thread_0)
             (= main@%.1.i2.ph_0 main@%_2_0))
         (=> (and main@.lr.ph.preheader_0 main@.thread_0)
             (= main@%.1.i2.ph_1 main@%.1.i2.ph_0))
         (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.1.i2_0 main@%.1.i2.ph_1))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.01.i1_0 main@%_2_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.1.i2_1 main@%.1.i2_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.01.i1_1 main@%.01.i1_0))
         main@.lr.ph_0)
    (main@.lr.ph main@%.1.i2_1 main@%.01.i1_1 main@%loop.bound_0)))
(constraint (=> (and (main@_13 main@%loop.bound_0 main@%_2_0 @g_0)
         true
         (= main@%_14_0 @g_0)
         (= main@%_16_0 (- 0 main@%_2_0))
         (=> main@_17_0 (and main@_17_0 main@_13_0))
         (=> (and main@_17_0 main@_13_0) (= main@%.0.i_0 main@%_16_0))
         (=> (and main@_17_0 main@_13_0) (= main@%.0.i_1 main@%.0.i_0))
         main@_17_0)
    (main@_17 main@%loop.bound_0 main@%_2_0 main@%.0.i_1)))
(constraint (=> (and (main@_17 main@%loop.bound_0 main@%_2_0 main@%.0.i_0)
         true
         (= main@%_18_0 (> main@%_2_0 2))
         (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@_17_0))
         (=> (and main@.lr.ph.preheader_0 main@_17_0) main@%_18_0)
         (=> (and main@.lr.ph.preheader_0 main@_17_0)
             (= main@%.1.i2.ph_0 main@%.0.i_0))
         (=> (and main@.lr.ph.preheader_0 main@_17_0)
             (= main@%.1.i2.ph_1 main@%.1.i2.ph_0))
         (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.1.i2_0 main@%.1.i2.ph_1))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.01.i1_0 main@%_2_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.1.i2_1 main@%.1.i2_0))
         (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
             (= main@%.01.i1_1 main@%.01.i1_0))
         main@.lr.ph_0)
    (main@.lr.ph main@%.1.i2_1 main@%.01.i1_1 main@%loop.bound_0)))
(constraint (let ((a!1 (and (main@_17 main@%loop.bound_0 main@%_2_0 main@%.0.i_0)
                true
                (= main@%_18_0 (> main@%_2_0 2))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@_17_0))
                (=> (and main@verifier.error_0 main@_17_0) (not main@%_18_0))
                (=> (and main@verifier.error_0 main@_17_0)
                    (= main@%.01.i.lcssa_0 main@%_2_0))
                (=> (and main@verifier.error_0 main@_17_0)
                    (= main@%.1.i.lcssa_0 main@%.0.i_0))
                (=> (and main@verifier.error_0 main@_17_0)
                    (= main@%.01.i.lcssa_1 main@%.01.i.lcssa_0))
                (=> (and main@verifier.error_0 main@_17_0)
                    (= main@%.1.i.lcssa_1 main@%.1.i.lcssa_0))
                (=> main@verifier.error_0
                    (= main@%_22_0 (< main@%.1.i.lcssa_1 9)))
                (=> main@verifier.error_0
                    (= main@%_23_0 (< main@%.1.i.lcssa_1 main@%.01.i.lcssa_1)))
                (=> main@verifier.error_0
                    (= main@%or.cond.i_0 (or main@%_22_0 main@%_23_0)))
                (=> main@verifier.error_0
                    (= main@%_24_0 (- 0 main@%.01.i.lcssa_1)))
                (=> main@verifier.error_0
                    (= main@%_25_0 (< main@%.1.i.lcssa_1 main@%_24_0)))
                (=> main@verifier.error_0
                    (= main@%or.cond3.i_0 (or main@%_25_0 main@%or.cond.i_0)))
                (=> main@verifier.error_0 main@%or.cond3.i_0)
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(constraint (=> (and (main@.lr.ph main@%.1.i2_0 main@%.01.i1_0 main@%loop.bound_0)
         true
         (= main@%_19_0 (+ main@%.1.i2_0 1))
         (= main@%_20_0 (+ main@%.01.i1_0 (- 3)))
         (= main@%_21_0 (> main@%.01.i1_0 main@%loop.bound_0))
         (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.lr.ph_0))
         (=> (and main@.lr.ph_1 main@.lr.ph_0) main@%_21_0)
         (=> (and main@.lr.ph_1 main@.lr.ph_0) (= main@%.1.i2_1 main@%_19_0))
         (=> (and main@.lr.ph_1 main@.lr.ph_0) (= main@%.01.i1_1 main@%_20_0))
         (=> (and main@.lr.ph_1 main@.lr.ph_0) (= main@%.1.i2_2 main@%.1.i2_1))
         (=> (and main@.lr.ph_1 main@.lr.ph_0)
             (= main@%.01.i1_2 main@%.01.i1_1))
         main@.lr.ph_1)
    (main@.lr.ph main@%.1.i2_2 main@%.01.i1_2 main@%loop.bound_0)))
(constraint (let ((a!1 (and (main@.lr.ph main@%.1.i2_0 main@%.01.i1_0 main@%loop.bound_0)
                true
                (= main@%_19_0 (+ main@%.1.i2_0 1))
                (= main@%_20_0 (+ main@%.01.i1_0 (- 3)))
                (= main@%_21_0 (> main@%.01.i1_0 main@%loop.bound_0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@.lr.ph_0))
                (=> (and main@verifier.error_0 main@.lr.ph_0) (not main@%_21_0))
                (=> (and main@verifier.error_0 main@.lr.ph_0)
                    (= main@%.01.i.lcssa_0 main@%_20_0))
                (=> (and main@verifier.error_0 main@.lr.ph_0)
                    (= main@%.1.i.lcssa_0 main@%_19_0))
                (=> (and main@verifier.error_0 main@.lr.ph_0)
                    (= main@%.01.i.lcssa_1 main@%.01.i.lcssa_0))
                (=> (and main@verifier.error_0 main@.lr.ph_0)
                    (= main@%.1.i.lcssa_1 main@%.1.i.lcssa_0))
                (=> main@verifier.error_0
                    (= main@%_22_0 (< main@%.1.i.lcssa_1 9)))
                (=> main@verifier.error_0
                    (= main@%_23_0 (< main@%.1.i.lcssa_1 main@%.01.i.lcssa_1)))
                (=> main@verifier.error_0
                    (= main@%or.cond.i_0 (or main@%_22_0 main@%_23_0)))
                (=> main@verifier.error_0
                    (= main@%_24_0 (- 0 main@%.01.i.lcssa_1)))
                (=> main@verifier.error_0
                    (= main@%_25_0 (< main@%.1.i.lcssa_1 main@%_24_0)))
                (=> main@verifier.error_0
                    (= main@%or.cond3.i_0 (or main@%_25_0 main@%or.cond.i_0)))
                (=> main@verifier.error_0 main@%or.cond3.i_0)
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(constraint (=> (and (main@_10!_FwdCond
           main@%loop.bound_0
           main@%_2_0
           @g_0
           @find_condition_0)
         (main@_10 main@%loop.bound_0 main@%_2_0 @g_0 @find_condition_0)
         true
         (= main@%_11_0 @find_condition_0)
         (=> main@_13_0 (and main@_13_0 main@_10_0))
         (=> (and main@_13_0 main@_10_0) main@%_12_0)
         main@_13_0)
    (main@_13 main@%loop.bound_0 main@%_2_0 @g_0)))
(constraint (=> (and (not (main@_10!_FwdCond
                main@%loop.bound_0
                main@%_2_0
                @g_0
                @find_condition_0))
         (main@_10 main@%loop.bound_0 main@%_2_0 @g_0 @find_condition_0)
         true
         (= main@%_11_0 @find_condition_0)
         (=> main@_17_0 (and main@_17_0 main@_10_0))
         (=> (and main@_17_0 main@_10_0) (not main@%_12_0))
         (=> (and main@_17_0 main@_10_0) (= main@%.0.i_0 9))
         (=> (and main@_17_0 main@_10_0) (= main@%.0.i_1 main@%.0.i_0))
         main@_17_0)
    (main@_17 main@%loop.bound_0 main@%_2_0 main@%.0.i_1)))
(constraint (=> main@verifier.error.split false))
(check-synth)
