(synth-fun verifier.error ((x0 Bool) (x1 Bool) (x2 Bool) ) Bool)
(synth-fun mainventry ((x0 Int) (x1 Int) ) Bool)
(synth-fun mainventry.split () Bool)
(synth-fun mainventry!_BAD () Bool)
(declare-var mainv%_0_0 Int )
(declare-var vnd_0 Int )
(declare-var mainv%_1_0 Int )
(declare-var mainv%_2_0 Int )
(declare-var vfind_condition_0 Int )
(declare-var mainv%_3_0 Bool )
(declare-var mainv%phitmp.i_0 Bool )
(declare-var mainv%spec.select.i_0 Bool )
(declare-var mainventry_0 Bool )
(declare-var mainventry.split_0 Bool )
(constraint (verifier.error false false false))
(constraint (verifier.error false true true))
(constraint (verifier.error true false true))
(constraint (verifier.error true true true))
(constraint (mainventry vnd_0 vfind_condition_0))
(constraint (=> (and (mainventry vnd_0 vfind_condition_0)
         true
         (= mainv%_0_0 vnd_0)
         (= mainv%_2_0 vfind_condition_0)
         (= mainv%phitmp.i_0 (> mainv%_1_0 0))
         (= mainv%spec.select.i_0 (and mainv%_3_0 mainv%phitmp.i_0))
         (not mainv%spec.select.i_0)
         (=> mainventry.split_0 (and mainventry.split_0 mainventry_0))
         mainventry.split_0)
    mainventry.split))
(constraint (=> mainventry.split false))
(check-synth)
