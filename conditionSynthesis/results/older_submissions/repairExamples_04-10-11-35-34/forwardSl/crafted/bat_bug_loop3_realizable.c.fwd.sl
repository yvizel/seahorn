(synth-fun verifier.error ((x0 Bool) (x1 Bool) (x2 Bool) ) Bool)
(synth-fun mainventry ((x0 Int) (x1 Int) ) Bool)
(synth-fun mainv_10 ((x0 Int) (x1 Int) (x2 Int) (x3 Int) ) Bool)
(synth-fun mainvverifier.error.split () Bool)
(synth-fun mainventry!_BAD () Bool)
(declare-var mainv%_11_0 Int )
(declare-var vfind_condition_0 Int )
(declare-var mainv%_12_0 Bool )
(declare-var mainv%_14_0 Bool )
(declare-var mainv%.01.i_2 Int )
(declare-var mainv%.1.i_2 Int )
(declare-var mainv%_0_0 Bool )
(declare-var mainv%_1_0 Int )
(declare-var vnd_0 Int )
(declare-var mainv%_3_0 Int )
(declare-var mainv%_4_0 Int )
(declare-var mainv%_5_0 Int )
(declare-var mainv%_8_0 Bool )
(declare-var mainv%.1.i.ph_2 Int )
(declare-var mainventry_0 Bool )
(declare-var mainv%loop.bound_0 Int )
(declare-var mainv%_2_0 Int )
(declare-var mainv%_7_0 Int )
(declare-var mainv_9_0 Bool )
(declare-var mainv.preheader_0 Bool )
(declare-var |tuple(mainventry_0, mainv.preheader_0)| Bool )
(declare-var mainv%.1.i.ph_0 Int )
(declare-var mainv%.1.i.ph_1 Int )
(declare-var mainv_10_0 Bool )
(declare-var mainv%.01.i_0 Int )
(declare-var mainv%.1.i_0 Int )
(declare-var mainv%.01.i_1 Int )
(declare-var mainv%.1.i_1 Int )
(declare-var mainv%_13_0 Int )
(declare-var mainv%_15_0 Int )
(declare-var mainv_10_1 Bool )
(declare-var mainvverifier.error_0 Bool )
(declare-var mainvverifier.error.split_0 Bool )
(constraint (verifier.error false false false))
(constraint (verifier.error false true true))
(constraint (verifier.error true false true))
(constraint (verifier.error true true true))
(constraint (mainventry vfind_condition_0 vnd_0))
(constraint (let ((a!1 (and (mainventry vfind_condition_0 vnd_0)
                true
                (= mainv%_0_0 (= mainv%loop.bound_0 9))
                mainv%_0_0
                (= mainv%_1_0 vnd_0)
                (= mainv%_3_0 vnd_0)
                (= mainv%_5_0 vnd_0)
                (= mainv%_7_0 (+ mainv%_4_0 mainv%_2_0))
                (= mainv%_8_0 (> mainv%_7_0 8))
                (=> mainv_9_0 (and mainv_9_0 mainventry_0))
                (=> (and mainv_9_0 mainventry_0) mainv%_8_0)
                (=> |tuple(mainventry_0, mainv.preheader_0)| mainventry_0)
                (=> mainv.preheader_0
                    (or (and mainv.preheader_0 mainv_9_0)
                        |tuple(mainventry_0, mainv.preheader_0)|))
                (=> |tuple(mainventry_0, mainv.preheader_0)| (not mainv%_8_0))
                (=> (and mainv.preheader_0 mainv_9_0)
                    (= mainv%.1.i.ph_0 mainv%_7_0))
                (=> |tuple(mainventry_0, mainv.preheader_0)|
                    (= mainv%.1.i.ph_1 9))
                (=> (and mainv.preheader_0 mainv_9_0)
                    (= mainv%.1.i.ph_2 mainv%.1.i.ph_0))
                (=> |tuple(mainventry_0, mainv.preheader_0)|
                    (= mainv%.1.i.ph_2 mainv%.1.i.ph_1))
                (=> mainv_10_0 (and mainv_10_0 mainv.preheader_0))
                (=> (and mainv_10_0 mainv.preheader_0)
                    (= mainv%.01.i_0 mainv%_2_0))
                (=> (and mainv_10_0 mainv.preheader_0)
                    (= mainv%.1.i_0 mainv%.1.i.ph_2))
                (=> (and mainv_10_0 mainv.preheader_0)
                    (= mainv%.01.i_1 mainv%.01.i_0))
                (=> (and mainv_10_0 mainv.preheader_0)
                    (= mainv%.1.i_1 mainv%.1.i_0))
                mainv_10_0)))
  (=> a!1
      (mainv_10 vfind_condition_0 mainv%.1.i_1 mainv%.01.i_1 mainv%loop.bound_0))))
(constraint (=> (and (mainv_10 vfind_condition_0
                   mainv%.1.i_0
                   mainv%.01.i_0
                   mainv%loop.bound_0)
         true
         (= mainv%_11_0 vfind_condition_0)
         mainv%_12_0
         (= mainv%_13_0 (+ mainv%.1.i_0 mainv%.01.i_0))
         (= mainv%_14_0 (> mainv%_13_0 mainv%loop.bound_0))
         (= mainv%_15_0 (+ mainv%.01.i_0 (- 3)))
         (=> mainv_10_1 (and mainv_10_1 mainv_10_0))
         (=> (and mainv_10_1 mainv_10_0) mainv%_14_0)
         (=> (and mainv_10_1 mainv_10_0) (= mainv%.01.i_1 mainv%_15_0))
         (=> (and mainv_10_1 mainv_10_0) (= mainv%.1.i_1 mainv%_13_0))
         (=> (and mainv_10_1 mainv_10_0) (= mainv%.01.i_2 mainv%.01.i_1))
         (=> (and mainv_10_1 mainv_10_0) (= mainv%.1.i_2 mainv%.1.i_1))
         mainv_10_1)
    (mainv_10 vfind_condition_0 mainv%.1.i_2 mainv%.01.i_2 mainv%loop.bound_0)))
(constraint (=> (and (mainv_10 vfind_condition_0
                   mainv%.1.i_0
                   mainv%.01.i_0
                   mainv%loop.bound_0)
         true
         (= mainv%_11_0 vfind_condition_0)
         mainv%_12_0
         (= mainv%_13_0 (+ mainv%.1.i_0 mainv%.01.i_0))
         (= mainv%_14_0 (> mainv%_13_0 mainv%loop.bound_0))
         (= mainv%_15_0 (+ mainv%.01.i_0 (- 3)))
         (=> mainvverifier.error_0 (and mainvverifier.error_0 mainv_10_0))
         (=> (and mainvverifier.error_0 mainv_10_0) (not mainv%_14_0))
         (=> mainvverifier.error.split_0
             (and mainvverifier.error.split_0 mainvverifier.error_0))
         mainvverifier.error.split_0)
    mainvverifier.error.split))
(constraint (=> mainvverifier.error.split false))
(check-synth)
