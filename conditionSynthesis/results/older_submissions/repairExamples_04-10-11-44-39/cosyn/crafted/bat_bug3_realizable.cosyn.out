(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...10 rules 0s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...9 rules 0s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 12.95 :after-memory 13.15)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (0, 1) FAR 1 U 0.00
expand: main@entry!_BAD (0, 0) FAR  w(0) 1. F 0.00
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 13.15 :after-memory 13.25)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.00 :before-memory 13.25 :after-memory 13.35)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (1, 2) FAR 1 U 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1.
	create_child: main@entry (0, 2) FAR 1 U 0.00
expand: main@entry (0, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1. F 0.00
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 13.35 :after-memory 13.44)
Propagating: 0 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 13.44 :after-memory 13.44)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (2, 3) FAR 1 U 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1.
	create_child: main@entry (1, 3) FAR 1 U 0.00
expand: main@entry (1, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (0, 3) FAR 707 U 0.00
expand: main@entry!_Cond (0, 0) FAR  w(0) 707. F 0.00
expand: main@entry (1, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 13.44 :after-memory 13.64)
Propagating: 0 1 2 3  ! 4 
(spacer::context::propagate :time 0.00 :before-memory 13.64 :after-memory 13.64)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (3, 4) FAR 1 U 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1.
	create_child: main@entry (2, 4) FAR 1 U 0.00
expand: main@entry (2, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (1, 4) FAR 707 U 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 707.
	create_child: main@_10 (0, 4) FAR 1113 U 0.00
expand: main@_10 (0, 0) FAR  w(0) 1113. F 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 707. F 0.00
expand: main@entry (2, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1. F 0.00
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 13.64 :after-memory 13.93)
Propagating: 0 1 2 3 4  ! 5 
(spacer::context::propagate :time 0.00 :before-memory 13.93 :after-memory 13.93)
Entering level 5
expand: query!0 (5, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (4, 5) FAR 1 U 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1.
	create_child: main@entry (3, 5) FAR 1 U 0.00
expand: main@entry (3, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (2, 5) FAR 707 U 0.00
expand: main@entry!_Cond (2, 0) FAR  w(0) 707.
	create_child: main@_10 (1, 5) FAR 1113 U 0.00
expand: main@_10 (1, 0) FAR  w(0) 1113.
	create_child: main@_10!_Cond (0, 5) FAR 1193 U 0.00
expand: main@_10!_Cond (0, 0) FAR  w(0) 1193. F 0.00
expand: main@_10 (1, 0) FAR  w(0) 1113. F 0.00
expand: main@entry!_Cond (2, 0) FAR  w(0) 707. F 0.00
expand: main@entry (3, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1. F 0.00
expand: query!0 (5, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 13.93 :after-memory 14.12)
Propagating: 0 1 2 3 4 5  ! 6 
(spacer::context::propagate :time 0.00 :before-memory 14.12 :after-memory 14.12)
Entering level 6
expand: query!0 (6, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (5, 6) FAR 1 U 0.00
expand: main@entry!_BAD (5, 0) FAR  w(0) 1.
	create_child: main@entry (4, 6) FAR 1 U 0.00
expand: main@entry (4, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (3, 6) FAR 707 U 0.00
expand: main@entry!_Cond (3, 0) FAR  w(0) 707.
	create_child: main@_10 (2, 6) FAR 1113 U 0.00
expand: main@_10 (2, 0) FAR  w(0) 1113.
	create_child: main@_10!_Cond (1, 6) FAR 1193 U 0.00
expand: main@_10!_Cond (1, 0) FAR  w(0) 1193.
	create_child: main@verifier.error (0, 6) FAR 1860 U 0.00
expand: main@verifier.error (0, 0) FAR  w(0) 1860. F 0.00
expand: main@_10!_Cond (1, 0) FAR  w(0) 1193. F 0.00
expand: main@_10 (2, 0) FAR  w(0) 1113. F 0.00
expand: main@entry!_Cond (3, 0) FAR  w(0) 707. F 0.00
expand: main@entry (4, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (5, 0) FAR  w(0) 1. F 0.00
expand: query!0 (6, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 14.12 :after-memory 14.42)
Propagating: 0 1 2 3 
(spacer::context::propagate :time 0.00 :before-memory 14.42 :after-memory 14.42)
(define-fun main@entry!_BAD () Bool
  false)
(define-fun main@entry!_Cond ((x!0 Int) (x!1 Int) (x!2 Int) (x!3 Int) (x!4 Int)) Bool
  (not (>= x!4 9)))
(define-fun main@_8 ((x!0 Int) (x!1 Int) (x!2 Int) (x!3 Int)) Bool
  true)
(define-fun main@_13 ((x!0 Int) (x!1 Int)) Bool
  true)
(define-fun main@verifier.error ((x!0 Int)) Bool
  (not (>= x!0 9)))
(define-fun main@entry ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  false)
(define-fun main@_10 ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  (not (>= x!1 9)))
(define-fun main@_10!_Cond ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  (not (>= x!2 9)))
