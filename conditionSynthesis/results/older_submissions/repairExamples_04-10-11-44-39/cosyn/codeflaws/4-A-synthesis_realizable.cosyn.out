(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...7 rules 0.001s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...6 rules 0s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...6 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...6 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 10.37 :after-memory 10.47)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (0, 1) FAR 1 U 0.00
expand: main@entry!_BAD (0, 0) FAR  w(0) 1. F 0.00
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 10.47 :after-memory 10.67)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.00 :before-memory 10.67 :after-memory 10.67)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (1, 2) FAR 1 U 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1.
	create_child: main@entry (0, 2) FAR 1 U 0.00
expand: main@entry (0, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1. F 0.00
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 10.67 :after-memory 10.86)
Propagating: 0 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 10.86 :after-memory 10.86)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (2, 3) FAR 1 U 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1.
	create_child: main@entry (1, 3) FAR 1 U 0.00
expand: main@entry (1, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (0, 3) FAR 1 U 0.00
expand: main@entry!_Cond (0, 0) FAR  w(0) 1. F 0.00
expand: main@entry (1, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 10.86 :after-memory 11.43)
Propagating: 0 1 2 3  ! 4 
(spacer::context::propagate :time 0.00 :before-memory 11.43 :after-memory 11.62)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (3, 4) FAR 1 U 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1.
	create_child: main@entry (2, 4) FAR 1 U 0.00
expand: main@entry (2, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (1, 4) FAR 1 U 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 1.
	create_child: main@_4 (0, 4) FAR 4078 U 0.00
expand: main@_4 (0, 0) FAR  w(0) 4078. F 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 1.
	create_child: main@_4 (0, 4) FAR 1 U 0.00
expand: main@_4 (0, 0) FAR  w(0) 1. UNDEF 0.00
expand: main@_4 (0, 0) FAR  w(1) 1.
	create_child: main@_6 (0, 4) FAR 4753 X 0.00
expand: main@_6 (0, 0) FAR  w(0) 4753. F 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 1. F 0.00
expand: main@entry (2, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1. F 0.00
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 11.62 :after-memory 12.89)
Propagating: 0 
(spacer::context::propagate :time 0.00 :before-memory 12.89 :after-memory 12.89)
(define-fun main@entry!_BAD () Bool
  false)
(define-fun main@entry ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  false)
(define-fun main@entry!_Cond ((x!0 Int) (x!1 Int)) Bool
  false)
(define-fun main@_4 ((x!0 Int) (x!1 Int)) Bool
  (not (<= x!1 2)))
(define-fun main@_6 ((x!0 Int) (x!1 Int)) Bool
  (not (>= x!1 3)))
