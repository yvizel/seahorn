(synth-fun verifier.error ((x0 Bool) (x1 Bool) (x2 Bool) ) Bool)
(synth-fun mainventry ((x0 Int) (x1 Int) ) Bool)
(synth-fun mainv_9 ((x0 Int) (x1 Int) ) Bool)
(synth-fun mainvAllRepair_buggy_main.exit.i ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun mainvAllRepair_correct_main.exit.i.split () Bool)
(synth-fun mainventry!_BAD () Bool)
(synth-fun mainventry!_Cond ((x0 Int) (x1 Int) (x2 Int) ) Bool)
(synth-fun mainventry!_FwdCond ((x0 Int) (x1 Int) ) Bool)
(declare-var mainv%_19_0 Bool )
(declare-var mainv%_17_0 Int )
(declare-var mainv%_14_0 Bool )
(declare-var mainv%_15_0 Bool )
(declare-var mainv%or.cond.i.i_0 Bool )
(declare-var mainv%_12_0 Bool )
(declare-var mainv%.0.i1.i_3 Int )
(declare-var mainv%_10_0 Int )
(declare-var mainv%_2_0 Int )
(declare-var vnd_0 Int )
(declare-var mainv%_4_0 Int )
(declare-var mainv%_6_0 Int )
(declare-var vfind_condition_0 Int )
(declare-var mainv%_7_0 Int )
(declare-var mainv%_8_0 Bool )
(declare-var mainventry_0 Bool )
(declare-var mainv%_3_0 Int )
(declare-var mainv%_5_0 Int )
(declare-var mainv_9_0 Bool )
(declare-var mainvAllRepair_buggy_main.exit.i_0 Bool )
(declare-var mainv%.0.i.i_0 Int )
(declare-var mainv%.0.i.i_1 Int )
(declare-var mainv%_11_0 Int )
(declare-var mainv_13_0 Bool )
(declare-var mainv_16_0 Bool )
(declare-var mainv%_18_0 Int )
(declare-var mainvAllRepair_correct_main.exit.i_0 Bool )
(declare-var |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)| Bool )
(declare-var |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)| Bool )
(declare-var mainv%.0.i1.i_0 Int )
(declare-var mainv%.0.i1.i_1 Int )
(declare-var mainv%.0.i1.i_2 Int )
(declare-var mainvAllRepair_correct_main.exit.i.split_0 Bool )
(constraint (verifier.error false false false))
(constraint (verifier.error false true true))
(constraint (verifier.error true false true))
(constraint (verifier.error true true true))
(constraint (mainventry vnd_0 vfind_condition_0))
(constraint (=> (and (mainv_9 mainv%_5_0 mainv%_3_0)
         true
         (= mainv%_11_0 (div mainv%_10_0 2))
         (=> mainvAllRepair_buggy_main.exit.i_0
             (and mainvAllRepair_buggy_main.exit.i_0 mainv_9_0))
         (=> (and mainvAllRepair_buggy_main.exit.i_0 mainv_9_0)
             (= mainv%.0.i.i_0 mainv%_11_0))
         (=> (and mainvAllRepair_buggy_main.exit.i_0 mainv_9_0)
             (= mainv%.0.i.i_1 mainv%.0.i.i_0))
         mainvAllRepair_buggy_main.exit.i_0)
    (mainvAllRepair_buggy_main.exit.i mainv%.0.i.i_1 mainv%_5_0 mainv%_3_0)))
(constraint (let ((a!1 (and (mainvAllRepair_buggy_main.exit.i
                  mainv%.0.i.i_0
                  mainv%_5_0
                  mainv%_3_0)
                true
                (= mainv%_12_0 (> mainv%_3_0 0))
                (=> mainv_13_0
                    (and mainv_13_0 mainvAllRepair_buggy_main.exit.i_0))
                (=> (and mainv_13_0 mainvAllRepair_buggy_main.exit.i_0)
                    mainv%_12_0)
                (=> mainv_13_0 (= mainv%_14_0 (<= mainv%_3_0 mainv%_5_0)))
                (=> mainv_13_0 (= mainv%_15_0 (< mainv%_5_0 17)))
                (=> mainv_13_0
                    (= mainv%or.cond.i.i_0 (and mainv%_14_0 mainv%_15_0)))
                (=> mainv_16_0 (and mainv_16_0 mainv_13_0))
                (=> (and mainv_16_0 mainv_13_0) mainv%or.cond.i.i_0)
                (=> mainv_16_0 (= mainv%_18_0 (div mainv%_17_0 2)))
                (=> |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)|
                    mainv_13_0)
                (=> |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)|
                    mainvAllRepair_buggy_main.exit.i_0)
                (=> mainvAllRepair_correct_main.exit.i_0
                    (or (and mainvAllRepair_correct_main.exit.i_0 mainv_16_0)
                        |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)|
                        |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)|))
                (=> |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)|
                    (not mainv%or.cond.i.i_0))
                (=> |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)|
                    (not mainv%_12_0))
                (=> (and mainvAllRepair_correct_main.exit.i_0 mainv_16_0)
                    (= mainv%.0.i1.i_0 mainv%_18_0))
                (=> |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)|
                    (= mainv%.0.i1.i_1 0))
                (=> |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)|
                    (= mainv%.0.i1.i_2 0))
                (=> (and mainvAllRepair_correct_main.exit.i_0 mainv_16_0)
                    (= mainv%.0.i1.i_3 mainv%.0.i1.i_0))
                (=> |tuple(mainv_13_0, mainvAllRepair_correct_main.exit.i_0)|
                    (= mainv%.0.i1.i_3 mainv%.0.i1.i_1))
                (=> |tuple(mainvAllRepair_buggy_main.exit.i_0, mainvAllRepair_correct_main.exit.i_0)|
                    (= mainv%.0.i1.i_3 mainv%.0.i1.i_2))
                (=> mainvAllRepair_correct_main.exit.i_0
                    (= mainv%_19_0 (= mainv%.0.i.i_0 mainv%.0.i1.i_3)))
                (=> mainvAllRepair_correct_main.exit.i_0 (not mainv%_19_0))
                (=> mainvAllRepair_correct_main.exit.i.split_0
                    (and mainvAllRepair_correct_main.exit.i.split_0
                         mainvAllRepair_correct_main.exit.i_0))
                mainvAllRepair_correct_main.exit.i.split_0)))
  (=> a!1 mainvAllRepair_correct_main.exit.i.split)))
(constraint (=> (and (mainventry!_FwdCond vnd_0 vfind_condition_0)
         (mainventry vnd_0 vfind_condition_0)
         true
         (= mainv%_2_0 vnd_0)
         (= mainv%_4_0 vnd_0)
         (= mainv%_6_0 vfind_condition_0)
         (= mainv%_8_0 (= mainv%_7_0 0))
         (=> mainv_9_0 (and mainv_9_0 mainventry_0))
         (=> (and mainv_9_0 mainventry_0) (not mainv%_8_0))
         mainv_9_0)
    (mainv_9 mainv%_5_0 mainv%_3_0)))
(constraint (=> (and (not (mainventry!_FwdCond vnd_0 vfind_condition_0))
         (mainventry vnd_0 vfind_condition_0)
         true
         (= mainv%_2_0 vnd_0)
         (= mainv%_4_0 vnd_0)
         (= mainv%_6_0 vfind_condition_0)
         (= mainv%_8_0 (= mainv%_7_0 0))
         (=> mainvAllRepair_buggy_main.exit.i_0
             (and mainvAllRepair_buggy_main.exit.i_0 mainventry_0))
         (=> (and mainvAllRepair_buggy_main.exit.i_0 mainventry_0) mainv%_8_0)
         (=> (and mainvAllRepair_buggy_main.exit.i_0 mainventry_0)
             (= mainv%.0.i.i_0 0))
         (=> (and mainvAllRepair_buggy_main.exit.i_0 mainventry_0)
             (= mainv%.0.i.i_1 mainv%.0.i.i_0))
         mainvAllRepair_buggy_main.exit.i_0)
    (mainvAllRepair_buggy_main.exit.i mainv%.0.i.i_1 mainv%_5_0 mainv%_3_0)))
(constraint (=> mainvAllRepair_correct_main.exit.i.split false))
(check-synth)
