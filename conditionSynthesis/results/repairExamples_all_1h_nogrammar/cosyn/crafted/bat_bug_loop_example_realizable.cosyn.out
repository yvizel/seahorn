(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...10 rules 0s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...9 rules 0s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...9 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...9 rules 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 11.13 :after-memory 11.32)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (0, 1) FAR 1 U 0.00
expand: main@entry!_BAD (0, 0) FAR  w(0) 1. F 0.00
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 11.32 :after-memory 11.42)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.00 :before-memory 11.42 :after-memory 11.42)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (1, 2) FAR 1 U 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1.
	create_child: main@entry (0, 2) FAR 1 U 0.00
expand: main@entry (0, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1. F 0.00
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 11.42 :after-memory 11.61)
Propagating: 0 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 11.61 :after-memory 11.61)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (2, 3) FAR 1 U 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1.
	create_child: main@entry (1, 3) FAR 1 U 0.00
expand: main@entry (1, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (0, 3) FAR 1029 U 0.00
expand: main@entry!_Cond (0, 0) FAR  w(0) 1029. F 0.00
expand: main@entry (1, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 11.61 :after-memory 11.93)
Propagating: 0 1 2 3  ! 4 
(spacer::context::propagate :time 0.00 :before-memory 11.93 :after-memory 11.93)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (3, 4) FAR 1 U 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1.
	create_child: main@entry (2, 4) FAR 1 U 0.00
expand: main@entry (2, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (1, 4) FAR 1029 U 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 1029.
	create_child: main@_13 (0, 4) FAR 1403 U 0.00
expand: main@_13 (0, 0) FAR  w(0) 1403. F 0.00
expand: main@entry!_Cond (1, 0) FAR  w(0) 1029. F 0.00
expand: main@entry (2, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1. F 0.00
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 11.93 :after-memory 12.12)
Propagating: 0 1 2 3 4  ! 5 
(spacer::context::propagate :time 0.00 :before-memory 12.12 :after-memory 12.12)
Entering level 5
expand: query!0 (5, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (4, 5) FAR 1 U 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1.
	create_child: main@entry (3, 5) FAR 1 U 0.00
expand: main@entry (3, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (2, 5) FAR 1029 U 0.00
expand: main@entry!_Cond (2, 0) FAR  w(0) 1029.
	create_child: main@_13 (1, 5) FAR 1403 U 0.00
expand: main@_13 (1, 0) FAR  w(0) 1403.
	create_child: main@.lr.ph (0, 5) FAR 1969 U 0.00
expand: main@.lr.ph (0, 0) FAR  w(0) 1969. F 0.00
expand: main@_13 (1, 0) FAR  w(0) 1403. F 0.00
expand: main@entry!_Cond (2, 0) FAR  w(0) 1029. F 0.00
expand: main@entry (3, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1. F 0.00
expand: query!0 (5, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 12.12 :after-memory 12.41)
Propagating: 0 1 2 3 4 5  ! 6 
(spacer::context::propagate :time 0.00 :before-memory 12.41 :after-memory 12.51)
Entering level 6
expand: query!0 (6, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (5, 6) FAR 1 U 0.00
expand: main@entry!_BAD (5, 0) FAR  w(0) 1.
	create_child: main@entry (4, 6) FAR 1 U 0.00
expand: main@entry (4, 0) FAR  w(0) 1.
	create_child: main@entry!_Cond (3, 6) FAR 1029 U 0.00
expand: main@entry!_Cond (3, 0) FAR  w(0) 1029.
	create_child: main@_13 (2, 6) FAR 1403 U 0.00
expand: main@_13 (2, 0) FAR  w(0) 1403.
	create_child: main@.lr.ph (1, 6) FAR 1969 U 0.00
expand: main@.lr.ph (1, 0) FAR  w(0) 1969. F 0.00
expand: main@_13 (2, 0) FAR  w(0) 1403. F 0.00
expand: main@entry!_Cond (3, 0) FAR  w(0) 1029. F 0.00
expand: main@entry (4, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (5, 0) FAR  w(0) 1. F 0.00
expand: query!0 (6, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 12.51 :after-memory 12.70)
Propagating: 1 2 3 
(spacer::context::propagate :time 0.00 :before-memory 12.70 :after-memory 12.70)
(define-fun main@entry!_BAD () Bool
  false)
(define-fun main@entry!_Cond ((x!0 Int) (x!1 Int) (x!2 Int) (x!3 Int) (x!4 Int)) Bool
  (or (not (>= x!1 3)) (not (>= x!4 9))))
(define-fun main@entry ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  false)
(define-fun main@_9 ((x!0 Int) (x!1 Int) (x!2 Int) (x!3 Int)) Bool
  true)
(define-fun main@_13 ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  (or (not (>= x!0 3)) (not (>= x!2 9))))
(define-fun main@.lr.ph ((x!0 Int) (x!1 Int) (x!2 Int)) Bool
  (or (not (>= x!1 0)) (not (>= x!0 9)) (not (>= x!2 3))))
