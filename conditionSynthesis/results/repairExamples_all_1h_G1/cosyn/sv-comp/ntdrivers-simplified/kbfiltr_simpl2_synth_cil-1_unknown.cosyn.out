(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...9 rules 0.026s)
(transform N7datalog27mk_quantifier_instantiationE...no-op 0s)
(transform N7datalog8mk_scaleE...no-op 0s)
(transform N7datalog18mk_karr_invariantsE...no-op 0s)
(transform N7datalog14mk_array_blastE...no-op 0s)
(transform N7datalog16mk_elim_term_iteE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...7 rules 0.009s)
(transform N7datalog12mk_bit_blastE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...7 rules 0.002s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog13mk_coi_filterE...no-op 0s)
(transform N7datalog25mk_interp_tail_simplifierE...7 rules 0.001s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
(transform N7datalog15mk_rule_inlinerE...no-op 0s)
(transform N7datalog22mk_subsumption_checkerE...no-op 0s)
expand: query!0 (0, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.00 :before-memory 14.18 :after-memory 14.27)
Entering level 1
expand: query!0 (1, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (0, 1) FAR 1 U 0.00
expand: main@entry!_BAD (0, 0) FAR  w(0) 1. F 0.01
expand: query!0 (1, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 14.27 :after-memory 18.12)
Propagating: 0 1  ! 2 
(spacer::context::propagate :time 0.01 :before-memory 18.12 :after-memory 18.90)
Entering level 2
expand: query!0 (2, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (1, 2) FAR 1 U 0.00
expand: main@entry!_BAD (1, 0) FAR  w(0) 1.
	create_child: main@entry (0, 2) FAR 1 U 0.00
expand: main@entry (0, 0) FAR  w(0) 1. F 0.03
expand: main@entry!_BAD (1, 0) FAR  w(0) 1. F 0.00
expand: query!0 (2, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.03 :before-memory 18.90 :after-memory 24.08)
Propagating: 0 1 2  ! 3 
(spacer::context::propagate :time 0.00 :before-memory 24.08 :after-memory 24.49)
Entering level 3
expand: query!0 (3, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (2, 3) FAR 1 U 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1.
	create_child: main@entry (1, 3) FAR 1 U 0.00
expand: main@entry (1, 0) FAR  w(0) 1.
	create_child: main@NewDefault.i.i (0, 3) FAR 58075 U 0.01
expand: main@NewDefault.i.i (0, 0) FAR  w(0) 58075. F 0.00
expand: main@entry (1, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (2, 0) FAR  w(0) 1. F 0.00
expand: query!0 (3, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.01 :before-memory 24.49 :after-memory 25.64)
Propagating: 0 1 2 3  ! 4 
(spacer::context::propagate :time 0.00 :before-memory 25.64 :after-memory 25.64)
Entering level 4
expand: query!0 (4, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (3, 4) FAR 1 U 0.00
expand: main@entry!_BAD (3, 0) FAR  w(0) 1.
	create_child: main@entry (2, 4) FAR 1 U 0.00
expand: main@entry (2, 0) FAR  w(0) 1.
	create_child: main@NewDefault.i.i (1, 4) FAR 58075 U 0.00
expand: main@NewDefault.i.i (1, 0) FAR  w(0) 58075.
	create_child: main@NewDefault.i.i!_Cond (0, 4) FAR 58105 U 0.00
expand: main@NewDefault.i.i!_Cond (0, 0) FAR  w(0) 58105. F 0.00
expand: main@NewDefault.i.i (1, 0) FAR  w(0) 58075. F 0.00
expand: main@entry (2, 0) FAR  w(0) 1. F 0.01
expand: main@entry!_BAD (3, 0) FAR  w(0) 1. F 0.00
expand: query!0 (4, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.02 :before-memory 25.64 :after-memory 27.13)
Propagating: 0 1 2 3 4  ! 5 
(spacer::context::propagate :time 0.00 :before-memory 27.13 :after-memory 27.33)
Entering level 5
expand: query!0 (5, 0) FAR  w(0) 1.
	create_child: main@entry!_BAD (4, 5) FAR 1 U 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1.
	create_child: main@entry (3, 5) FAR 1 U 0.00
expand: main@entry (3, 0) FAR  w(0) 1.
	create_child: main@NewDefault.i.i (2, 5) FAR 58075 U 0.00
expand: main@NewDefault.i.i (2, 0) FAR  w(0) 58075.
	create_child: main@NewDefault.i.i!_Cond (1, 5) FAR 58105 U 0.00
expand: main@NewDefault.i.i!_Cond (1, 0) FAR  w(0) 58105.
	create_child: main@_260 (0, 5) FAR 61471 U 0.00
expand: main@_260 (0, 0) FAR  w(0) 61471. F 0.00
expand: main@NewDefault.i.i!_Cond (1, 0) FAR  w(0) 58105. F 0.00
expand: main@NewDefault.i.i (2, 0) FAR  w(0) 58075. F 0.00
expand: main@entry (3, 0) FAR  w(0) 1. F 0.00
expand: main@entry!_BAD (4, 0) FAR  w(0) 1. F 0.00
expand: query!0 (5, 0) FAR  w(0) 1. F 0.00
(spacer::context::check_reachability :time 0.02 :before-memory 27.33 :after-memory 29.49)
Propagating: 0 1 2 
(spacer::context::propagate :time 0.00 :before-memory 29.49 :after-memory 29.49)
(define-fun main@entry!_BAD () Bool
  false)
(define-fun main@NewDefault.i.i!_Cond ((x!0 Int)
 (x!1 Int)
 (x!2 Int)
 (x!3 Int)
 (x!4 Int)
 (x!5 Int)
 (x!6 Int)
 (x!7 Int)
 (x!8 Int)
 (x!9 Int)
 (x!10 Int)
 (x!11 (Array Int Int))
 (x!12 (Array Int Int))
 (x!13 (Array Int Int))
 (x!14 (Array Int Int))
 (x!15 (Array Int Int))
 (x!16 (Array Int Int))
 (x!17 (Array Int Int))
 (x!18 (Array Int Int))
 (x!19 (Array Int Int))
 (x!20 (Array Int Int))) Bool
  (not (= (select x!19 x!3) 0)))
(define-fun main@_260 ((x!0 (Array Int Int))
 (x!1 Int)
 (x!2 (Array Int Int))
 (x!3 Int)
 (x!4 (Array Int Int))
 (x!5 Int)
 (x!6 Int)
 (x!7 (Array Int Int))
 (x!8 Int)
 (x!9 (Array Int Int))
 (x!10 Int)
 (x!11 (Array Int Int))
 (x!12 Int)
 (x!13 (Array Int Int))
 (x!14 Int)
 (x!15 (Array Int Int))
 (x!16 Int)
 (x!17 (Array Int Int))
 (x!18 (Array Int Int))
 (x!19 Int)
 (x!20 Int)) Bool
  (not (= (select x!18 x!19) 0)))
(define-fun main@NewDefault.i.i ((x!0 (Array Int Int))
 (x!1 Int)
 (x!2 (Array Int Int))
 (x!3 Int)
 (x!4 (Array Int Int))
 (x!5 Int)
 (x!6 Int)
 (x!7 (Array Int Int))
 (x!8 Int)
 (x!9 (Array Int Int))
 (x!10 Int)
 (x!11 (Array Int Int))
 (x!12 Int)
 (x!13 (Array Int Int))
 (x!14 Int)
 (x!15 (Array Int Int))
 (x!16 Int)
 (x!17 (Array Int Int))
 (x!18 (Array Int Int))
 (x!19 Int)
 (x!20 Int)
 (x!21 Int)) Bool
  (not (= (select x!18 x!19) 0)))
(define-fun main@entry ((x!0 Int) (x!1 Int)) Bool
  false)
