./repairExamples_01-08-20-11-08/forwardSl//crafted/function_call_nontrivial_realizable.fwd.sl:1.9: No set-logic command was given before this point.
./repairExamples_01-08-20-11-08/forwardSl//crafted/function_call_nontrivial_realizable.fwd.sl:1.9: cvc5 will make all theories available.
./repairExamples_01-08-20-11-08/forwardSl//crafted/function_call_nontrivial_realizable.fwd.sl:1.9: Consider setting a stricter logic for (likely) better performance.
./repairExamples_01-08-20-11-08/forwardSl//crafted/function_call_nontrivial_realizable.fwd.sl:1.9: To suppress this warning in the future use (set-logic ALL).
(
(define-fun verifier.error ((x0 Bool) (x1 Bool) (x2 Bool)) Bool true)
(define-fun mainventry ((x0 Int) (x1 Int) (x2 Int) (x3 Int)) Bool true)
(define-fun mainv_13 ((x0 Int) (x1 Int) (x2 Int) (x3 Bool)) Bool (<= x1 0))
(define-fun mainv_16 ((x0 Int) (x1 Int)) Bool (<= x0 7))
(define-fun mainv_14 ((x0 Int) (x1 Int)) Bool false)
(define-fun mainv_5 ((x0 Int) (x1 Int) (x2 Int) (x3 Bool)) Bool (<= 1 x1))
(define-fun mainv_9 ((x0 Int) (x1 Int)) Bool (<= 1 x0))
(define-fun mainv_6 ((x0 Int) (x1 Int)) Bool (<= 7 x1))
(define-fun mainvverifier.error.split () Bool false)
(define-fun mainventry!_BAD () Bool true)
(define-fun mainv_5!_Cond ((x0 Int) (x1 Int) (x2 Int)) Bool true)
(define-fun mainv_13!_Cond ((x0 Int) (x1 Int) (x2 Int)) Bool true)
)
