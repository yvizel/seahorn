(synth-fun mainventry!_Cond ((x0 Int) (x1 Int) ) Bool
    ((Start Bool) (Atom Bool) (Expr Int) (Arr (Array Int Int)))
    ((Start Bool (Atom (Variable Bool) (Constant Bool) ))
    (Atom Bool ((>= Expr Expr) (<= Expr Expr) (> Expr Expr) (< Expr Expr) (= Expr Expr) (distinct Expr Expr) ))
    (Expr Int ((Variable Int) (Constant Int) (select Arr Expr) ))
    (Arr (Array Int Int) ((Variable (Array Int Int)) (Constant (Array Int Int)) )))
)
(declare-var mainv%_8_0 Bool )
(declare-var mainv%_5_0 Int )
(declare-var vf_0 Int )
(declare-var mainv%_0_0 Int )
(declare-var vnd_0 Int )
(declare-var mainv%_2_0 Int )
(declare-var vfind_condition_0 Int )
(declare-var mainv%_3_0 Bool )
(declare-var mainventry_0 Bool )
(declare-var mainv%_1_0 Int )
(declare-var mainv_6_0 Bool )
(declare-var mainv_4_0 Bool )
(declare-var mainv%_7_0 Int )
(declare-var mainvverifier.error_0 Bool )
(declare-var mainv%.0.i_0 Int )
(declare-var mainv%.0.i_1 Int )
(declare-var mainvverifier.error.split_0 Bool )
(constraint (let ((a!1 (and (mainventry!_Cond vf_0 mainv%_1_0)
                true
                (= mainv%_0_0 vnd_0)
                (= mainv%_2_0 vfind_condition_0)
                (=> mainv_6_0 (and mainv_6_0 mainventry_0))
                (=> (and mainv_6_0 mainventry_0) (not mainv%_3_0))
                mainv_6_0
                true
                (= mainv%_7_0 (- 0 mainv%_1_0))
                (=> mainvverifier.error_0 (and mainvverifier.error_0 mainv_6_0))
                (=> (and mainvverifier.error_0 mainv_6_0)
                    (= mainv%.0.i_0 mainv%_7_0))
                (=> (and mainvverifier.error_0 mainv_6_0)
                    (= mainv%.0.i_1 mainv%.0.i_0))
                (=> mainvverifier.error_0 (= mainv%_8_0 (> mainv%.0.i_1 (- 1))))
                (=> mainvverifier.error_0 (not mainv%_8_0))
                (=> mainvverifier.error.split_0
                    (and mainvverifier.error.split_0 mainvverifier.error_0))
                mainvverifier.error.split_0)))
  (=> a!1 false)))
(constraint (let ((a!1 (and (not (mainventry!_Cond vf_0 mainv%_1_0))
                true
                (= mainv%_0_0 vnd_0)
                (= mainv%_2_0 vfind_condition_0)
                (=> mainv_4_0 (and mainv_4_0 mainventry_0))
                (=> (and mainv_4_0 mainventry_0) mainv%_3_0)
                mainv_4_0
                true
                (= mainv%_5_0 vf_0)
                (=> mainvverifier.error_0 (and mainvverifier.error_0 mainv_4_0))
                (=> (and mainvverifier.error_0 mainv_4_0)
                    (= mainv%.0.i_0 mainv%_1_0))
                (=> (and mainvverifier.error_0 mainv_4_0)
                    (= mainv%.0.i_1 mainv%.0.i_0))
                (=> mainvverifier.error_0 (= mainv%_8_0 (> mainv%.0.i_1 (- 1))))
                (=> mainvverifier.error_0 (not mainv%_8_0))
                (=> mainvverifier.error.split_0
                    (and mainvverifier.error.split_0 mainvverifier.error_0))
                mainvverifier.error.split_0)))
  (=> a!1 false)))
(check-synth)
